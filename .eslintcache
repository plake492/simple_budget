[{"/Users/patricklake/dev/personel_projects/simple_budget/src/App.js":"1","/Users/patricklake/dev/personel_projects/simple_budget/src/reportWebVitals.js":"2","/Users/patricklake/dev/personel_projects/simple_budget/src/index.js":"3","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/SpendingTable.js":"4","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Withdrawl.js":"5","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Deposit.js":"6","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Select.js":"7","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Nav.js":"8","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/TableRow.js":"9","/Users/patricklake/dev/personel_projects/simple_budget/src/utils/GlobalState.js":"10","/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/SearchCategory.js":"11","/Users/patricklake/dev/personel_projects/simple_budget/src/utils/API.js":"12","/Users/patricklake/dev/personel_projects/simple_budget/src/utils/helpers.js":"13","/Users/patricklake/dev/personel_projects/simple_budget/src/pages/MonthBudget/index.js":"14","/Users/patricklake/dev/personel_projects/simple_budget/src/pages/Spending/index.js":"15"},{"size":567,"mtime":1608701271412,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1606665996335,"results":"18","hashOfConfig":"17"},{"size":472,"mtime":1606676676845,"results":"19","hashOfConfig":"17"},{"size":4973,"mtime":1608739286073,"results":"20","hashOfConfig":"17"},{"size":3133,"mtime":1608732657021,"results":"21","hashOfConfig":"17"},{"size":1915,"mtime":1608733297761,"results":"22","hashOfConfig":"17"},{"size":621,"mtime":1608569056249,"results":"23","hashOfConfig":"17"},{"size":599,"mtime":1608700582920,"results":"24","hashOfConfig":"17"},{"size":910,"mtime":1608735569247,"results":"25","hashOfConfig":"17"},{"size":1735,"mtime":1608739317368,"results":"26","hashOfConfig":"17"},{"size":1290,"mtime":1608574646064,"results":"27","hashOfConfig":"17"},{"size":465,"mtime":1608738166630,"results":"28","hashOfConfig":"17"},{"size":908,"mtime":1608735808016,"results":"29","hashOfConfig":"17"},{"size":2576,"mtime":1608734337171,"results":"30","hashOfConfig":"17"},{"size":7236,"mtime":1608739632081,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bprr8s",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},"/Users/patricklake/dev/personel_projects/simple_budget/src/App.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/reportWebVitals.js",[],["65","66"],"/Users/patricklake/dev/personel_projects/simple_budget/src/index.js",[],["67","68"],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/SpendingTable.js",["69"],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Withdrawl.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Deposit.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Select.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/Nav.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/TableRow.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/utils/GlobalState.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/componenets/SearchCategory.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/utils/API.js",["70"],"/Users/patricklake/dev/personel_projects/simple_budget/src/utils/helpers.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/pages/MonthBudget/index.js",[],"/Users/patricklake/dev/personel_projects/simple_budget/src/pages/Spending/index.js",["71"],"import React, { useState, useEffect } from 'react'\nimport Withdrawl from '../../componenets/Withdrawl'\nimport Deposit from '../../componenets/Deposit'\nimport SpendingTable from '../../componenets/SpendingTable'\n\nimport { uuid } from 'uuidv4'\nimport { useStoreContext } from '../../utils/GlobalState'\nimport { updateTransactionsBalance } from '../../utils/helpers'\nimport API from '../../utils/API'\nimport './style.css'\n\nfunction Spending () {\n  const [state, dispatch] = useStoreContext()\n\n  const underline = {\n    borderBottom: 'black 1px solid',\n    fontWeight: '700'\n  }\n\n  const [catCurrentBalance, setCatCurrentBalance] = useState(0)\n  const [transaction, setTransaction] = useState({})\n  const [accountOptions] = useState([{ item: 'Checking', itemId: 1 }, { item: 'Savings', itemId: 2 }])\n  const [cardOptions] = useState([{ item: '**** **** **** 0000', itemId: 1 }])\n  const [catSearch, setCatSearch] = useState('')\n  const [toggleType, setToggleType] = useState('') // use to togglw table from all items or single line item\n  const [keyWordSearch, setKeyWordSearch] = useState('')\n  const [display, setDisplay] = useState(state.originArr.length ? 'withdrawl' : 'deposit')\n  const [catOptions] = useState([\n    { item: 'All', itemId: 0 },\n    { item: 'Grocery', itemId: 1 },\n    { item: 'Food Out', itemId: 2 },\n    { item: 'Extra', itemId: 3 },\n    { item: 'Bill', itemId: 4 },\n    { item: 'Debt', itemId: 5 },\n    { item: 'Gas', itemId: 6 },\n    { item: 'Health', itemId: 7 },\n    { item: 'Undefined', itemId: 8 }\n  ])\n\n  useEffect(() => {\n    const { transactions, currentBalance } = API.getInitialBudget()\n    dispatch({\n      type: 'INITIALIZE_BUDGET',\n      transactions: transactions,\n      currentBalance: currentBalance\n    })\n  }, [])\n\n  const handleChangeTransactions = (e, type) => {\n    setToggleType(type)\n    let { name, value } = e.target\n    if (name.includes('Amount')) {\n      value = parseFloat(value)\n    }\n    setTransaction({ ...transaction, type: type, [name]: value })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (\n      (transaction.type === 'withdrawl' && Object.keys(transaction).length >= 4) ||\n      (transaction.type === 'deposit' && Object.keys(transaction).length >= 2)\n    ) {\n      const balance = transaction.type === 'deposit' ? (state.currentBalance + transaction.depositAmount) : (state.currentBalance - transaction.withdrawlAmount)\n\n      transaction.currentBalance = balance\n      transaction._id = uuid()\n      transaction.date = transaction.date || Date.now()\n\n      API.postBudget({\n        transactions: [...state.originArr, transaction],\n        currentBalance: balance\n      })\n\n      dispatch({\n        type: 'UPDATE_BUDGET_INSTANCE',\n        currentBalance: balance,\n        transaction: transaction\n      })\n    }\n    setTransaction({})\n    setToggleType('')\n  }\n\n  const updateCurrentBalance = (newArr) => {\n    let updateTransactions\n    let newBalance\n    if (newArr.length) {\n      updateTransactions = updateTransactionsBalance(newArr) // From Helper Functions\n      newBalance = updateTransactions[updateTransactions.length - 1].currentBalance\n    } else {\n      updateTransactions = []\n      newBalance = 0\n    }\n\n    API.postBudget({\n      transactions: updateTransactions,\n      currentBalance: newBalance\n    })\n\n    dispatch({\n      type: 'INITIALIZE_BUDGET',\n      transactions: updateTransactions,\n      currentBalance: newBalance\n    })\n\n    const budgetInstance = API.getInitialBudget()\n    budgetInstance.transactions = updateTransactions\n    API.postBudget(budgetInstance)\n  }\n\n  const handleChangeSearch = e => {\n    setCatSearch(e.target.value)\n  }\n\n  const searchByCat = (e) => {\n    e.preventDefault()\n    if (!catSearch || catSearch === ' -- select an option -- ') {\n      return resetCat()\n    }\n    if (catSearch === 'All') {\n      return resetCat()\n    }\n    dispatch({ type: 'RESET_TRANSACTION_ARR' })\n    const filterdTransactions = state.originArr.filter(item => item.category === catSearch)\n    const filterdBalance = filterdTransactions.reduce((acc, cur) => (acc += cur.withdrawlAmount), 0)\n    setCatCurrentBalance(filterdBalance)\n    dispatch({\n      type: 'UPDATE_TRANSACTION_ARR',\n      arr: filterdTransactions\n    })\n  }\n\n  const resetCat = () => {\n    setCatSearch('')\n    dispatch({ type: 'RESET_TRANSACTION_ARR' })\n    setCatCurrentBalance(0)\n  }\n\n  const searchByKeyWord = (e, word) => {\n    e.preventDefault()\n    if (searchByKeyWord) {\n      const searchRes = new Set()\n\n      state.originArr.forEach(item => {\n        const keys = Object.keys(item)\n        keys.forEach(key => {\n          if (typeof item[key] === 'string') {\n            if (item[key].toLowerCase().includes(keyWordSearch.toLowerCase())) {\n              searchRes.add(item)\n            }\n          }\n          if (typeof item[key] === 'number') {\n            if (item[key] === parseFloat(keyWordSearch)) {\n              searchRes.add(item)\n            }\n          }\n        })\n      })\n      dispatch({\n        type: 'UPDATE_TRANSACTION_ARR',\n        arr: [...searchRes]\n      })\n      setKeyWordSearch('')\n    }\n  }\n\n  const handleChangeKeyword = (e) => setKeyWordSearch(e.target.value)\n\n  return (\n    <>\n      <div className='container-fluid mt-5 row'>\n        <div className='col-lg-3'>\n          <div className='jumbotron'>\n            <div className='row px-4'>\n              <div className='w-100 d-flex justify-content-between px-4 mt-n4 pt-3 rounded mb-3' style={{ backgroundColor: '#C5C5C7' }}>\n                <p className='transaction_btn' style={display === 'withdrawl' ? underline : null} onClick={() => setDisplay('withdrawl')}>Withdrawl</p>\n                <p className='transaction_btn' style={display === 'deposit' ? underline : null} onClick={() => setDisplay('deposit')}>Deposit</p>\n              </div>\n              {display === 'withdrawl' ? (\n                <Withdrawl\n                  transaction={transaction}\n                  setTransaction={setTransaction}\n                  handleSubmit={handleSubmit}\n                  catOptions={catOptions}\n                  cardOptions={cardOptions}\n                  toggle={toggleType}\n                  setToggle={setToggleType}\n                  handleChange={handleChangeTransactions}\n                />\n              ) : (\n                <Deposit\n                  transaction={transaction}\n                  setTransaction={setTransaction}\n                  handleSubmit={handleSubmit}\n                  accountOptions={accountOptions}\n                  toggle={toggleType}\n                  setToggle={setToggleType}\n                  handleChange={handleChangeTransactions}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n        <div className='col-lg-9'>\n          <SpendingTable\n            searchByCat={searchByCat}\n            catOptions={catOptions}\n            resetCat={resetCat}\n            handleChangeSearch={handleChangeSearch}\n            updateCurrentBalance={updateCurrentBalance}\n            catCurrentBalance={catCurrentBalance}\n            searchByKeyWord={searchByKeyWord}\n            handleChangeKeyword={handleChangeKeyword}\n          />\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Spending\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":18,"nodeType":"80","messageId":"81","endLine":2,"endColumn":24},{"ruleId":"82","severity":1,"message":"83","line":15,"column":1,"nodeType":"84","endLine":19,"endColumn":2},{"ruleId":"85","severity":1,"message":"86","line":47,"column":6,"nodeType":"87","endLine":47,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"no-unused-vars","'toDate' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [dispatch]",{"range":"94","text":"95"},[1749,1751],"[dispatch]"]